swagger: '2.0'
info:
  description: Periscol Backend API documentation
  version: 0.0.1
  title: Periscol Backend API
  contact: {}
  license:
    name: unlicensed
host: localhost:8080
basePath: /
tags:
  - name: account-resource
    description: Account Resource
  - name: child-resource
    description: Child Resource
  - name: classroom-resource
    description: Classroom Resource
  - name: diet-resource
    description: Diet Resource
  - name: family-resource
    description: Family Resource
  - name: grade-level-resource
    description: Grade Level Resource
  - name: public-user-resource
    description: Public User Resource
  - name: user-jwt-controller
    description: User JWT Controller
  - name: user-resource
    description: User Resource
paths:
  /api/account:
    get:
      tags:
        - account-resource
      summary: getAccount
      operationId: getAccountUsingGET
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AdminUserDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
        - account-resource
      summary: saveAccount
      operationId: saveAccountUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: userDTO
          description: userDTO
          required: true
          schema:
            $ref: '#/definitions/AdminUserDTO'
      responses:
        '200':
          description: OK
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/account/change-password:
    post:
      tags:
        - account-resource
      summary: changePassword
      operationId: changePasswordUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: passwordChangeDto
          description: passwordChangeDto
          required: true
          schema:
            $ref: '#/definitions/PasswordChangeDTO'
      responses:
        '200':
          description: OK
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/account/reset-password/finish:
    post:
      tags:
        - account-resource
      summary: finishPasswordReset
      operationId: finishPasswordResetUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: keyAndPassword
          description: keyAndPassword
          required: true
          schema:
            $ref: '#/definitions/KeyAndPasswordVM'
      responses:
        '200':
          description: OK
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/account/reset-password/init:
    post:
      tags:
        - account-resource
      summary: requestPasswordReset
      operationId: requestPasswordResetUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: mail
          description: mail
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/activate:
    get:
      tags:
        - account-resource
      summary: activateAccount
      operationId: activateAccountUsingGET
      produces:
        - '*/*'
      parameters:
        - name: key
          in: query
          description: key
          required: true
          type: string
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/admin/user:
    post:
      tags:
        - user-resource
      summary: createUser
      operationId: createUserUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: userDTO
          description: userDTO
          required: true
          schema:
            $ref: '#/definitions/AdminUserDTO'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/User'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    put:
      tags:
        - user-resource
      summary: updateUser
      operationId: updateUserUsingPUT
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: userDTO
          description: userDTO
          required: true
          schema:
            $ref: '#/definitions/AdminUserDTO'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AdminUserDTO'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/admin/user/{login}:
    get:
      tags:
        - user-resource
      summary: getUser
      operationId: getUserUsingGET
      produces:
        - '*/*'
      parameters:
        - name: login
          in: path
          description: login
          required: true
          type: string
          pattern: ^(?>[a-zA-Z0-9!$&*+=?^_`{|}~.-]+@[a-zA-Z0-9-]+(?:\.[a-zA-Z0-9-]+)*)|(?>[_.@A-Za-z0-9-]+)$
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AdminUserDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    delete:
      tags:
        - user-resource
      summary: deleteUser
      operationId: deleteUserUsingDELETE
      produces:
        - '*/*'
      parameters:
        - name: login
          in: path
          description: login
          required: true
          type: string
          pattern: ^(?>[a-zA-Z0-9!$&*+=?^_`{|}~.-]+@[a-zA-Z0-9-]+(?:\.[a-zA-Z0-9-]+)*)|(?>[_.@A-Za-z0-9-]+)$
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /api/admin/users:
    get:
      tags:
        - user-resource
      summary: getAllUsers
      operationId: getAllUsersUsingGET
      produces:
        - '*/*'
      parameters:
        - name: page
          in: query
          description: Page number of the requested page
          required: false
          type: integer
          format: int32
        - name: size
          in: query
          description: Size of a page
          required: false
          type: integer
          format: int32
        - name: sort
          in: query
          description: 'Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.'
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/AdminUserDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/authenticate:
    get:
      tags:
        - account-resource
      summary: isAuthenticated
      operationId: isAuthenticatedUsingGET
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
        - user-jwt-controller
      summary: authorize
      operationId: authorizeUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: loginVM
          description: loginVM
          required: true
          schema:
            $ref: '#/definitions/LoginVM'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/JWTToken'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/authorities:
    get:
      tags:
        - public-user-resource
      summary: getAuthorities
      operationId: getAuthoritiesUsingGET
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/child:
    post:
      tags:
        - child-resource
      summary: createChild
      operationId: createChildUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: childDTO
          description: childDTO
          required: true
          schema:
            $ref: '#/definitions/ChildDTO'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ChildDTO'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/child/{id}:
    get:
      tags:
        - child-resource
      summary: getChild
      operationId: getChildUsingGET
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ChildDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    put:
      tags:
        - child-resource
      summary: updateChild
      operationId: updateChildUsingPUT
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: childDTO
          description: childDTO
          required: true
          schema:
            $ref: '#/definitions/ChildDTO'
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ChildDTO'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    delete:
      tags:
        - child-resource
      summary: deleteChild
      operationId: deleteChildUsingDELETE
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    patch:
      tags:
        - child-resource
      summary: partialUpdateChild
      operationId: partialUpdateChildUsingPATCH
      consumes:
        - application/json
        - application/merge-patch+json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: childDTO
          description: childDTO
          required: true
          schema:
            $ref: '#/definitions/ChildDTO'
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ChildDTO'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /api/children:
    get:
      tags:
        - child-resource
      summary: getAllChildren
      operationId: getAllChildrenUsingGET
      produces:
        - '*/*'
      parameters:
        - name: eagerload
          in: query
          description: eagerload
          required: false
          type: boolean
          default: false
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/ChildDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/classroom:
    post:
      tags:
        - classroom-resource
      summary: createClassroom
      operationId: createClassroomUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: classroomDTO
          description: classroomDTO
          required: true
          schema:
            $ref: '#/definitions/ClassroomDTO'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ClassroomDTO'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/classroom/{id}:
    get:
      tags:
        - classroom-resource
      summary: getClassroom
      operationId: getClassroomUsingGET
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ClassroomDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    put:
      tags:
        - classroom-resource
      summary: updateClassroom
      operationId: updateClassroomUsingPUT
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: classroomDTO
          description: classroomDTO
          required: true
          schema:
            $ref: '#/definitions/ClassroomDTO'
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ClassroomDTO'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    delete:
      tags:
        - classroom-resource
      summary: deleteClassroom
      operationId: deleteClassroomUsingDELETE
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    patch:
      tags:
        - classroom-resource
      summary: partialUpdateClassroom
      operationId: partialUpdateClassroomUsingPATCH
      consumes:
        - application/json
        - application/merge-patch+json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: classroomDTO
          description: classroomDTO
          required: true
          schema:
            $ref: '#/definitions/ClassroomDTO'
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ClassroomDTO'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /api/classrooms:
    get:
      tags:
        - classroom-resource
      summary: getAllClassrooms
      operationId: getAllClassroomsUsingGET
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/ClassroomDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/diet:
    post:
      tags:
        - diet-resource
      summary: createDiet
      operationId: createDietUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: dietDTO
          description: dietDTO
          required: true
          schema:
            $ref: '#/definitions/DietDTO'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DietDTO'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/diet/{id}:
    get:
      tags:
        - diet-resource
      summary: getDiet
      operationId: getDietUsingGET
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DietDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    put:
      tags:
        - diet-resource
      summary: updateDiet
      operationId: updateDietUsingPUT
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: dietDTO
          description: dietDTO
          required: true
          schema:
            $ref: '#/definitions/DietDTO'
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DietDTO'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    delete:
      tags:
        - diet-resource
      summary: deleteDiet
      operationId: deleteDietUsingDELETE
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    patch:
      tags:
        - diet-resource
      summary: partialUpdateDiet
      operationId: partialUpdateDietUsingPATCH
      consumes:
        - application/json
        - application/merge-patch+json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: dietDTO
          description: dietDTO
          required: true
          schema:
            $ref: '#/definitions/DietDTO'
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DietDTO'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /api/diets:
    get:
      tags:
        - diet-resource
      summary: getAllDiets
      operationId: getAllDietsUsingGET
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/DietDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/families:
    get:
      tags:
        - family-resource
      summary: getAllFamilies
      operationId: getAllFamiliesUsingGET
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/FamilyDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/family:
    post:
      tags:
        - family-resource
      summary: createFamily
      operationId: createFamilyUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: familyDTO
          description: familyDTO
          required: true
          schema:
            $ref: '#/definitions/FamilyDTO'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FamilyDTO'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/family/{id}:
    get:
      tags:
        - family-resource
      summary: getFamily
      operationId: getFamilyUsingGET
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FamilyDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    put:
      tags:
        - family-resource
      summary: updateFamily
      operationId: updateFamilyUsingPUT
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: familyDTO
          description: familyDTO
          required: true
          schema:
            $ref: '#/definitions/FamilyDTO'
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FamilyDTO'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    delete:
      tags:
        - family-resource
      summary: deleteFamily
      operationId: deleteFamilyUsingDELETE
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    patch:
      tags:
        - family-resource
      summary: partialUpdateFamily
      operationId: partialUpdateFamilyUsingPATCH
      consumes:
        - application/json
        - application/merge-patch+json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: familyDTO
          description: familyDTO
          required: true
          schema:
            $ref: '#/definitions/FamilyDTO'
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FamilyDTO'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /api/grade-level:
    post:
      tags:
        - grade-level-resource
      summary: createGradeLevel
      operationId: createGradeLevelUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: gradeLevelDTO
          description: gradeLevelDTO
          required: true
          schema:
            $ref: '#/definitions/GradeLevelDTO'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/GradeLevelDTO'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/grade-level/{id}:
    get:
      tags:
        - grade-level-resource
      summary: getGradeLevel
      operationId: getGradeLevelUsingGET
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/GradeLevelDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    put:
      tags:
        - grade-level-resource
      summary: updateGradeLevel
      operationId: updateGradeLevelUsingPUT
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: gradeLevelDTO
          description: gradeLevelDTO
          required: true
          schema:
            $ref: '#/definitions/GradeLevelDTO'
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/GradeLevelDTO'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    delete:
      tags:
        - grade-level-resource
      summary: deleteGradeLevel
      operationId: deleteGradeLevelUsingDELETE
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    patch:
      tags:
        - grade-level-resource
      summary: partialUpdateGradeLevel
      operationId: partialUpdateGradeLevelUsingPATCH
      consumes:
        - application/json
        - application/merge-patch+json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: gradeLevelDTO
          description: gradeLevelDTO
          required: true
          schema:
            $ref: '#/definitions/GradeLevelDTO'
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/GradeLevelDTO'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /api/grade-levels:
    get:
      tags:
        - grade-level-resource
      summary: getAllGradeLevels
      operationId: getAllGradeLevelsUsingGET
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/GradeLevelDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/register:
    post:
      tags:
        - account-resource
      summary: registerAccount
      operationId: registerAccountUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: managedUserVM
          description: managedUserVM
          required: true
          schema:
            $ref: '#/definitions/ManagedUserVM'
      responses:
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/users:
    get:
      tags:
        - public-user-resource
      summary: getAllPublicUsers
      operationId: getAllPublicUsersUsingGET
      produces:
        - '*/*'
      parameters:
        - name: page
          in: query
          description: Page number of the requested page
          required: false
          type: integer
          format: int32
        - name: size
          in: query
          description: Size of a page
          required: false
          type: integer
          format: int32
        - name: sort
          in: query
          description: 'Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.'
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/UserDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
definitions:
  AdminUserDTO:
    type: object
    required:
      - login
    properties:
      activated:
        type: boolean
      authorities:
        type: array
        uniqueItems: true
        items:
          type: string
      createdBy:
        type: string
      createdDate:
        type: string
        format: date-time
      email:
        type: string
        minLength: 5
        maxLength: 254
      firstName:
        type: string
        minLength: 0
        maxLength: 50
      id:
        type: integer
        format: int64
      imageUrl:
        type: string
        minLength: 0
        maxLength: 256
      langKey:
        type: string
        minLength: 2
        maxLength: 10
      lastModifiedBy:
        type: string
      lastModifiedDate:
        type: string
        format: date-time
      lastName:
        type: string
        minLength: 0
        maxLength: 50
      login:
        type: string
        minLength: 1
        maxLength: 50
        pattern: ^(?>[a-zA-Z0-9!$&*+=?^_`{|}~.-]+@[a-zA-Z0-9-]+(?:\.[a-zA-Z0-9-]+)*)|(?>[_.@A-Za-z0-9-]+)$
    title: AdminUserDTO
  ChildDTO:
    type: object
    properties:
      adelphie:
        $ref: '#/definitions/FamilyDTO'
      birthday:
        type: string
        format: date-time
      classroom:
        $ref: '#/definitions/ClassroomDTO'
      diets:
        type: array
        uniqueItems: true
        items:
          $ref: '#/definitions/DietDTO'
      gradeLevel:
        $ref: '#/definitions/GradeLevelDTO'
      id:
        type: integer
        format: int64
      name:
        type: string
      surname:
        type: string
    title: ChildDTO
  ClassroomDTO:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
      professor:
        type: string
    title: ClassroomDTO
  DietDTO:
    type: object
    properties:
      description:
        type: string
      id:
        type: integer
        format: int64
      name:
        type: string
    title: DietDTO
  FamilyDTO:
    type: object
    properties:
      id:
        type: integer
        format: int64
      postalAdress:
        type: string
      referingParentName:
        type: string
      referingParentSurname:
        type: string
      telephoneNumber:
        type: string
    title: FamilyDTO
  GradeLevelDTO:
    type: object
    properties:
      id:
        type: integer
        format: int64
      level:
        type: string
    title: GradeLevelDTO
  JWTToken:
    type: object
    properties:
      id_token:
        type: string
    title: JWTToken
  KeyAndPasswordVM:
    type: object
    properties:
      key:
        type: string
      newPassword:
        type: string
    title: KeyAndPasswordVM
  LoginVM:
    type: object
    required:
      - password
      - username
    properties:
      password:
        type: string
        minLength: 4
        maxLength: 100
      rememberMe:
        type: boolean
      username:
        type: string
        minLength: 1
        maxLength: 50
    title: LoginVM
  ManagedUserVM:
    type: object
    required:
      - login
    properties:
      activated:
        type: boolean
      authorities:
        type: array
        uniqueItems: true
        items:
          type: string
      createdBy:
        type: string
      createdDate:
        type: string
        format: date-time
      email:
        type: string
        minLength: 5
        maxLength: 254
      firstName:
        type: string
        minLength: 0
        maxLength: 50
      id:
        type: integer
        format: int64
      imageUrl:
        type: string
        minLength: 0
        maxLength: 256
      langKey:
        type: string
        minLength: 2
        maxLength: 10
      lastModifiedBy:
        type: string
      lastModifiedDate:
        type: string
        format: date-time
      lastName:
        type: string
        minLength: 0
        maxLength: 50
      login:
        type: string
        minLength: 1
        maxLength: 50
        pattern: ^(?>[a-zA-Z0-9!$&*+=?^_`{|}~.-]+@[a-zA-Z0-9-]+(?:\.[a-zA-Z0-9-]+)*)|(?>[_.@A-Za-z0-9-]+)$
      password:
        type: string
        minLength: 4
        maxLength: 100
    title: ManagedUserVM
  PasswordChangeDTO:
    type: object
    properties:
      currentPassword:
        type: string
      newPassword:
        type: string
    title: PasswordChangeDTO
  User:
    type: object
    required:
      - activated
      - login
    properties:
      activated:
        type: boolean
      email:
        type: string
        minLength: 5
        maxLength: 254
      firstName:
        type: string
        minLength: 0
        maxLength: 50
      id:
        type: integer
        format: int64
      imageUrl:
        type: string
        minLength: 0
        maxLength: 256
      langKey:
        type: string
        minLength: 2
        maxLength: 10
      lastName:
        type: string
        minLength: 0
        maxLength: 50
      login:
        type: string
        minLength: 1
        maxLength: 50
        pattern: ^(?>[a-zA-Z0-9!$&*+=?^_`{|}~.-]+@[a-zA-Z0-9-]+(?:\.[a-zA-Z0-9-]+)*)|(?>[_.@A-Za-z0-9-]+)$
      resetDate:
        type: string
        format: date-time
    title: User
  UserDTO:
    type: object
    properties:
      id:
        type: integer
        format: int64
      login:
        type: string
    title: UserDTO
